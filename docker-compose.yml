version: '3.8'

services:

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend_1
      - frontend_2
      - backend_1
      - backend_2
    networks:
      - app-network

  frontend_1:
    image: kaziiriad/todo-frontend:delpoy
    ports:
      - "81:80"
    environment:
      - BACKEND_URL=http://nginx  # Add this to configure nginx
    networks:
      - app-network
    
  frontend_2:
    image: kaziiriad/todo-frontend:delpoy
    ports:
      - "82:80"
    environment:
      - BACKEND_URL=http://nginx  # Add this to configure nginx
    networks:
      - app-network

  backend_1:
    image: kaziiriad/todo-backend:delpoy
    ports:
      - "8001:8000"
    environment:
      - DB_HOST=postgres
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - DB_NAME=mydb
      - DB_PORT=5432
    depends_on:
      - postgres
    networks:
      - app-network

  backend_2:
    image: kaziiriad/todo-backend:delpoy
    ports:
      - "8002:8000"
    environment:
      - DB_HOST=postgres
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - DB_NAME=mydb
      - DB_PORT=5432
    depends_on:
      - postgres
    networks:
      - app-network


  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydb
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Use named volume instead
    user: postgres  # Add this to fix permission issues
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:  # This is now being used